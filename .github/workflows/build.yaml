name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # Install dependencies for backend
      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      # Install Vite globally
      - name: Install Vite globally
        run: npm install -g vite

      # Build backend
      - name: Build backend
        run: npm run build
        working-directory: backend

      # Set permissions for vue-cli-service
      - name: Set permissions for vue-cli-service
        run: chmod a+x node_modules/.bin/vue-cli-service 
        working-directory: vue9

      # Install dependencies for Laravel
      - name: Install Laravel dependencies
        run: npm ci
        working-directory: backend

      # Run Laravel unit tests
      - name: Run Laravel unit tests
        run: php artisan test
        working-directory: backend

      # Build and test Laravel backend
      - name: Build and test Laravel backend
        run: |
          docker build -t project2-backend -f backend/Dockerfile backend
          docker run project2-backend php artisan test

      # Install dependencies for frontend
      - name: Install frontend dependencies
        run: npm install
        working-directory: vue9

      # Build frontend
      - name: Build frontend
        run: npm run build
        working-directory: vue9

      # Build Docker image for frontend
      - name: Build Docker image for frontend
        run: docker build -t project2-vue9 -f vue9/Dockerfile vue9

      # Run container to serve the app
      - name: Run container to serve the app
        run: docker run -d -p 80:80 project2-vue9

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push backend image to Docker Hub
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-example-backend:latest

      # Build and push frontend image to Docker Hub
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: vue9
          file: vue9/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-example-frontend:latest

      # Deploy to production
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          password: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
          script: |
            cd /home/kenza/Project2
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laravel-example-frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laravel-example-backend:latest
            docker-compose docker-cpmpose.yml down
            docker-compose docker-compose.yml rm -f
            docker-compose docker-compose.yml up -d --build --remove-orphans
